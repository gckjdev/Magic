// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Common.pb.h"
// @@protoc_insertion_point(imports)

@implementation CommonRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [CommonRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PBDevice ()
@property SInt32 type;
@property (strong) NSString* model;
@property (strong) NSString* os;
@property (strong) NSString* deviceId;
@property (strong) NSString* deviceToken;
@property BOOL isJailBroken;
@end

@implementation PBDevice

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasModel {
  return !!hasModel_;
}
- (void) setHasModel:(BOOL) _value_ {
  hasModel_ = !!_value_;
}
@synthesize model;
- (BOOL) hasOs {
  return !!hasOs_;
}
- (void) setHasOs:(BOOL) _value_ {
  hasOs_ = !!_value_;
}
@synthesize os;
- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) _value_ {
  hasDeviceId_ = !!_value_;
}
@synthesize deviceId;
- (BOOL) hasDeviceToken {
  return !!hasDeviceToken_;
}
- (void) setHasDeviceToken:(BOOL) _value_ {
  hasDeviceToken_ = !!_value_;
}
@synthesize deviceToken;
- (BOOL) hasIsJailBroken {
  return !!hasIsJailBroken_;
}
- (void) setHasIsJailBroken:(BOOL) _value_ {
  hasIsJailBroken_ = !!_value_;
}
- (BOOL) isJailBroken {
  return !!isJailBroken_;
}
- (void) setIsJailBroken:(BOOL) _value_ {
  isJailBroken_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.type = 0;
    self.model = @"";
    self.os = @"";
    self.deviceId = @"";
    self.deviceToken = @"";
    self.isJailBroken = NO;
  }
  return self;
}
static PBDevice* defaultPBDeviceInstance = nil;
+ (void) initialize {
  if (self == [PBDevice class]) {
    defaultPBDeviceInstance = [[PBDevice alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPBDeviceInstance;
}
- (instancetype) defaultInstance {
  return defaultPBDeviceInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeInt32:1 value:self.type];
  }
  if (self.hasModel) {
    [output writeString:2 value:self.model];
  }
  if (self.hasOs) {
    [output writeString:3 value:self.os];
  }
  if (self.hasDeviceId) {
    [output writeString:4 value:self.deviceId];
  }
  if (self.hasDeviceToken) {
    [output writeString:5 value:self.deviceToken];
  }
  if (self.hasIsJailBroken) {
    [output writeBool:6 value:self.isJailBroken];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeInt32Size(1, self.type);
  }
  if (self.hasModel) {
    size_ += computeStringSize(2, self.model);
  }
  if (self.hasOs) {
    size_ += computeStringSize(3, self.os);
  }
  if (self.hasDeviceId) {
    size_ += computeStringSize(4, self.deviceId);
  }
  if (self.hasDeviceToken) {
    size_ += computeStringSize(5, self.deviceToken);
  }
  if (self.hasIsJailBroken) {
    size_ += computeBoolSize(6, self.isJailBroken);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBDevice*) parseFromData:(NSData*) data {
  return (PBDevice*)[[[PBDevice builder] mergeFromData:data] build];
}
+ (PBDevice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBDevice*)[[[PBDevice builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBDevice*) parseFromInputStream:(NSInputStream*) input {
  return (PBDevice*)[[[PBDevice builder] mergeFromInputStream:input] build];
}
+ (PBDevice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBDevice*)[[[PBDevice builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBDevice*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBDevice*)[[[PBDevice builder] mergeFromCodedInputStream:input] build];
}
+ (PBDevice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBDevice*)[[[PBDevice builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBDeviceBuilder*) builder {
  return [[PBDeviceBuilder alloc] init];
}
+ (PBDeviceBuilder*) builderWithPrototype:(PBDevice*) prototype {
  return [[PBDevice builder] mergeFrom:prototype];
}
- (PBDeviceBuilder*) builder {
  return [PBDevice builder];
}
- (PBDeviceBuilder*) toBuilder {
  return [PBDevice builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasModel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"model", self.model];
  }
  if (self.hasOs) {
    [output appendFormat:@"%@%@: %@\n", indent, @"os", self.os];
  }
  if (self.hasDeviceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceId", self.deviceId];
  }
  if (self.hasDeviceToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceToken", self.deviceToken];
  }
  if (self.hasIsJailBroken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isJailBroken", [NSNumber numberWithBool:self.isJailBroken]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBDevice class]]) {
    return NO;
  }
  PBDevice *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasModel == otherMessage.hasModel &&
      (!self.hasModel || [self.model isEqual:otherMessage.model]) &&
      self.hasOs == otherMessage.hasOs &&
      (!self.hasOs || [self.os isEqual:otherMessage.os]) &&
      self.hasDeviceId == otherMessage.hasDeviceId &&
      (!self.hasDeviceId || [self.deviceId isEqual:otherMessage.deviceId]) &&
      self.hasDeviceToken == otherMessage.hasDeviceToken &&
      (!self.hasDeviceToken || [self.deviceToken isEqual:otherMessage.deviceToken]) &&
      self.hasIsJailBroken == otherMessage.hasIsJailBroken &&
      (!self.hasIsJailBroken || self.isJailBroken == otherMessage.isJailBroken) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  if (self.hasModel) {
    hashCode = hashCode * 31 + [self.model hash];
  }
  if (self.hasOs) {
    hashCode = hashCode * 31 + [self.os hash];
  }
  if (self.hasDeviceId) {
    hashCode = hashCode * 31 + [self.deviceId hash];
  }
  if (self.hasDeviceToken) {
    hashCode = hashCode * 31 + [self.deviceToken hash];
  }
  if (self.hasIsJailBroken) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isJailBroken] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBDeviceBuilder()
@property (strong) PBDevice* resultPbdevice;
@end

@implementation PBDeviceBuilder
@synthesize resultPbdevice;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbdevice = [[PBDevice alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbdevice;
}
- (PBDeviceBuilder*) clear {
  self.resultPbdevice = [[PBDevice alloc] init];
  return self;
}
- (PBDeviceBuilder*) clone {
  return [PBDevice builderWithPrototype:resultPbdevice];
}
- (PBDevice*) defaultInstance {
  return [PBDevice defaultInstance];
}
- (PBDevice*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBDevice*) buildPartial {
  PBDevice* returnMe = resultPbdevice;
  self.resultPbdevice = nil;
  return returnMe;
}
- (PBDeviceBuilder*) mergeFrom:(PBDevice*) other {
  if (other == [PBDevice defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasModel) {
    [self setModel:other.model];
  }
  if (other.hasOs) {
    [self setOs:other.os];
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  if (other.hasDeviceToken) {
    [self setDeviceToken:other.deviceToken];
  }
  if (other.hasIsJailBroken) {
    [self setIsJailBroken:other.isJailBroken];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBDeviceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBDeviceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readInt32]];
        break;
      }
      case 18: {
        [self setModel:[input readString]];
        break;
      }
      case 26: {
        [self setOs:[input readString]];
        break;
      }
      case 34: {
        [self setDeviceId:[input readString]];
        break;
      }
      case 42: {
        [self setDeviceToken:[input readString]];
        break;
      }
      case 48: {
        [self setIsJailBroken:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return resultPbdevice.hasType;
}
- (SInt32) type {
  return resultPbdevice.type;
}
- (PBDeviceBuilder*) setType:(SInt32) value {
  resultPbdevice.hasType = YES;
  resultPbdevice.type = value;
  return self;
}
- (PBDeviceBuilder*) clearType {
  resultPbdevice.hasType = NO;
  resultPbdevice.type = 0;
  return self;
}
- (BOOL) hasModel {
  return resultPbdevice.hasModel;
}
- (NSString*) model {
  return resultPbdevice.model;
}
- (PBDeviceBuilder*) setModel:(NSString*) value {
  resultPbdevice.hasModel = YES;
  resultPbdevice.model = value;
  return self;
}
- (PBDeviceBuilder*) clearModel {
  resultPbdevice.hasModel = NO;
  resultPbdevice.model = @"";
  return self;
}
- (BOOL) hasOs {
  return resultPbdevice.hasOs;
}
- (NSString*) os {
  return resultPbdevice.os;
}
- (PBDeviceBuilder*) setOs:(NSString*) value {
  resultPbdevice.hasOs = YES;
  resultPbdevice.os = value;
  return self;
}
- (PBDeviceBuilder*) clearOs {
  resultPbdevice.hasOs = NO;
  resultPbdevice.os = @"";
  return self;
}
- (BOOL) hasDeviceId {
  return resultPbdevice.hasDeviceId;
}
- (NSString*) deviceId {
  return resultPbdevice.deviceId;
}
- (PBDeviceBuilder*) setDeviceId:(NSString*) value {
  resultPbdevice.hasDeviceId = YES;
  resultPbdevice.deviceId = value;
  return self;
}
- (PBDeviceBuilder*) clearDeviceId {
  resultPbdevice.hasDeviceId = NO;
  resultPbdevice.deviceId = @"";
  return self;
}
- (BOOL) hasDeviceToken {
  return resultPbdevice.hasDeviceToken;
}
- (NSString*) deviceToken {
  return resultPbdevice.deviceToken;
}
- (PBDeviceBuilder*) setDeviceToken:(NSString*) value {
  resultPbdevice.hasDeviceToken = YES;
  resultPbdevice.deviceToken = value;
  return self;
}
- (PBDeviceBuilder*) clearDeviceToken {
  resultPbdevice.hasDeviceToken = NO;
  resultPbdevice.deviceToken = @"";
  return self;
}
- (BOOL) hasIsJailBroken {
  return resultPbdevice.hasIsJailBroken;
}
- (BOOL) isJailBroken {
  return resultPbdevice.isJailBroken;
}
- (PBDeviceBuilder*) setIsJailBroken:(BOOL) value {
  resultPbdevice.hasIsJailBroken = YES;
  resultPbdevice.isJailBroken = value;
  return self;
}
- (PBDeviceBuilder*) clearIsJailBroken {
  resultPbdevice.hasIsJailBroken = NO;
  resultPbdevice.isJailBroken = NO;
  return self;
}
@end

@interface PBPoint ()
@property SInt32 posX;
@property SInt32 poxY;
@end

@implementation PBPoint

- (BOOL) hasPosX {
  return !!hasPosX_;
}
- (void) setHasPosX:(BOOL) _value_ {
  hasPosX_ = !!_value_;
}
@synthesize posX;
- (BOOL) hasPoxY {
  return !!hasPoxY_;
}
- (void) setHasPoxY:(BOOL) _value_ {
  hasPoxY_ = !!_value_;
}
@synthesize poxY;
- (instancetype) init {
  if ((self = [super init])) {
    self.posX = 0;
    self.poxY = 0;
  }
  return self;
}
static PBPoint* defaultPBPointInstance = nil;
+ (void) initialize {
  if (self == [PBPoint class]) {
    defaultPBPointInstance = [[PBPoint alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPBPointInstance;
}
- (instancetype) defaultInstance {
  return defaultPBPointInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPosX) {
    [output writeInt32:1 value:self.posX];
  }
  if (self.hasPoxY) {
    [output writeInt32:2 value:self.poxY];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPosX) {
    size_ += computeInt32Size(1, self.posX);
  }
  if (self.hasPoxY) {
    size_ += computeInt32Size(2, self.poxY);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBPoint*) parseFromData:(NSData*) data {
  return (PBPoint*)[[[PBPoint builder] mergeFromData:data] build];
}
+ (PBPoint*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBPoint*)[[[PBPoint builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBPoint*) parseFromInputStream:(NSInputStream*) input {
  return (PBPoint*)[[[PBPoint builder] mergeFromInputStream:input] build];
}
+ (PBPoint*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBPoint*)[[[PBPoint builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBPoint*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBPoint*)[[[PBPoint builder] mergeFromCodedInputStream:input] build];
}
+ (PBPoint*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBPoint*)[[[PBPoint builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBPointBuilder*) builder {
  return [[PBPointBuilder alloc] init];
}
+ (PBPointBuilder*) builderWithPrototype:(PBPoint*) prototype {
  return [[PBPoint builder] mergeFrom:prototype];
}
- (PBPointBuilder*) builder {
  return [PBPoint builder];
}
- (PBPointBuilder*) toBuilder {
  return [PBPoint builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPosX) {
    [output appendFormat:@"%@%@: %@\n", indent, @"posX", [NSNumber numberWithInteger:self.posX]];
  }
  if (self.hasPoxY) {
    [output appendFormat:@"%@%@: %@\n", indent, @"poxY", [NSNumber numberWithInteger:self.poxY]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBPoint class]]) {
    return NO;
  }
  PBPoint *otherMessage = other;
  return
      self.hasPosX == otherMessage.hasPosX &&
      (!self.hasPosX || self.posX == otherMessage.posX) &&
      self.hasPoxY == otherMessage.hasPoxY &&
      (!self.hasPoxY || self.poxY == otherMessage.poxY) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPosX) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.posX] hash];
  }
  if (self.hasPoxY) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.poxY] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBPointBuilder()
@property (strong) PBPoint* resultPbpoint;
@end

@implementation PBPointBuilder
@synthesize resultPbpoint;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbpoint = [[PBPoint alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbpoint;
}
- (PBPointBuilder*) clear {
  self.resultPbpoint = [[PBPoint alloc] init];
  return self;
}
- (PBPointBuilder*) clone {
  return [PBPoint builderWithPrototype:resultPbpoint];
}
- (PBPoint*) defaultInstance {
  return [PBPoint defaultInstance];
}
- (PBPoint*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBPoint*) buildPartial {
  PBPoint* returnMe = resultPbpoint;
  self.resultPbpoint = nil;
  return returnMe;
}
- (PBPointBuilder*) mergeFrom:(PBPoint*) other {
  if (other == [PBPoint defaultInstance]) {
    return self;
  }
  if (other.hasPosX) {
    [self setPosX:other.posX];
  }
  if (other.hasPoxY) {
    [self setPoxY:other.poxY];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBPointBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBPointBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPosX:[input readInt32]];
        break;
      }
      case 16: {
        [self setPoxY:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPosX {
  return resultPbpoint.hasPosX;
}
- (SInt32) posX {
  return resultPbpoint.posX;
}
- (PBPointBuilder*) setPosX:(SInt32) value {
  resultPbpoint.hasPosX = YES;
  resultPbpoint.posX = value;
  return self;
}
- (PBPointBuilder*) clearPosX {
  resultPbpoint.hasPosX = NO;
  resultPbpoint.posX = 0;
  return self;
}
- (BOOL) hasPoxY {
  return resultPbpoint.hasPoxY;
}
- (SInt32) poxY {
  return resultPbpoint.poxY;
}
- (PBPointBuilder*) setPoxY:(SInt32) value {
  resultPbpoint.hasPoxY = YES;
  resultPbpoint.poxY = value;
  return self;
}
- (PBPointBuilder*) clearPoxY {
  resultPbpoint.hasPoxY = NO;
  resultPbpoint.poxY = 0;
  return self;
}
@end

@interface PBPointList ()
@property (strong) NSMutableArray * pointArray;
@end

@implementation PBPointList

@synthesize pointArray;
@dynamic point;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static PBPointList* defaultPBPointListInstance = nil;
+ (void) initialize {
  if (self == [PBPointList class]) {
    defaultPBPointListInstance = [[PBPointList alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPBPointListInstance;
}
- (instancetype) defaultInstance {
  return defaultPBPointListInstance;
}
- (NSArray *)point {
  return pointArray;
}
- (PBPoint*)pointAtIndex:(NSUInteger)index {
  return [pointArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.pointArray enumerateObjectsUsingBlock:^(PBPoint *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.pointArray enumerateObjectsUsingBlock:^(PBPoint *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBPointList*) parseFromData:(NSData*) data {
  return (PBPointList*)[[[PBPointList builder] mergeFromData:data] build];
}
+ (PBPointList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBPointList*)[[[PBPointList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBPointList*) parseFromInputStream:(NSInputStream*) input {
  return (PBPointList*)[[[PBPointList builder] mergeFromInputStream:input] build];
}
+ (PBPointList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBPointList*)[[[PBPointList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBPointList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBPointList*)[[[PBPointList builder] mergeFromCodedInputStream:input] build];
}
+ (PBPointList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBPointList*)[[[PBPointList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBPointListBuilder*) builder {
  return [[PBPointListBuilder alloc] init];
}
+ (PBPointListBuilder*) builderWithPrototype:(PBPointList*) prototype {
  return [[PBPointList builder] mergeFrom:prototype];
}
- (PBPointListBuilder*) builder {
  return [PBPointList builder];
}
- (PBPointListBuilder*) toBuilder {
  return [PBPointList builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.pointArray enumerateObjectsUsingBlock:^(PBPoint *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"point"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBPointList class]]) {
    return NO;
  }
  PBPointList *otherMessage = other;
  return
      [self.pointArray isEqualToArray:otherMessage.pointArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.pointArray enumerateObjectsUsingBlock:^(PBPoint *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBPointListBuilder()
@property (strong) PBPointList* resultPbpointList;
@end

@implementation PBPointListBuilder
@synthesize resultPbpointList;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbpointList = [[PBPointList alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbpointList;
}
- (PBPointListBuilder*) clear {
  self.resultPbpointList = [[PBPointList alloc] init];
  return self;
}
- (PBPointListBuilder*) clone {
  return [PBPointList builderWithPrototype:resultPbpointList];
}
- (PBPointList*) defaultInstance {
  return [PBPointList defaultInstance];
}
- (PBPointList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBPointList*) buildPartial {
  PBPointList* returnMe = resultPbpointList;
  self.resultPbpointList = nil;
  return returnMe;
}
- (PBPointListBuilder*) mergeFrom:(PBPointList*) other {
  if (other == [PBPointList defaultInstance]) {
    return self;
  }
  if (other.pointArray.count > 0) {
    if (resultPbpointList.pointArray == nil) {
      resultPbpointList.pointArray = [[NSMutableArray alloc] initWithArray:other.pointArray];
    } else {
      [resultPbpointList.pointArray addObjectsFromArray:other.pointArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBPointListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBPointListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBPointBuilder* subBuilder = [PBPoint builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPoint:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)point {
  return resultPbpointList.pointArray;
}
- (PBPoint*)pointAtIndex:(NSUInteger)index {
  return [resultPbpointList pointAtIndex:index];
}
- (PBPointListBuilder *)addPoint:(PBPoint*)value {
  if (resultPbpointList.pointArray == nil) {
    resultPbpointList.pointArray = [[NSMutableArray alloc]init];
  }
  [resultPbpointList.pointArray addObject:value];
  return self;
}
- (PBPointListBuilder *)setPointArray:(NSArray *)array {
  resultPbpointList.pointArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBPointListBuilder *)clearPoint {
  resultPbpointList.pointArray = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
